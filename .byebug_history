exit
 Minicron::Hub::JobExecutionOutput.where(id: ids).destroy_all
        ids = @job.executions.includes(:job_execution_outputs).map{ |j| j.job_execution_outputs.pluck('id') }.flatten.uniq
ids
 Minicron::Hub::JobExecutionOutput.where(id: ids).destroy_all
exit
 Minicron::Hub::JobExecutionOutput.where(id: ids).destroy_all
 Minicron::Hub::JobExecutionOutput.where(id: ids).destroy
 Minicron::Hub::JobExecutionOutput.where(id: ids).delete_all
 Minicron::Hub::JobExecutionOutput.where(id: ids)
ids = @job.executions.map{ |j| j.job_execution_outputs.pluck('id') }.flatten.uniq
@job.executions.map{ |j| j.job_execution_outputs.pluck('id') }.flatten.uniq
@job.executions.includes(:job_execution_outputs).map{ |j| j.job_execution_outputs.pluck('id') }.flatten.uniq
@job.executions.includes(:job_execution_outputs).map{ |j| j.job_execution_outputs.pluck('id') }.flatten
@job.executions.includes(:job_execution_outputs).map{ |j| j.job_execution_outputs.pluck('id') }
@job.executions.includes(:job_execution_outputs).map(&:job_execution_outputs).pluck('id')
@job.executions.includes(:job_execution_outputs).map(&:job_execution_outputs)
@job.executions.includes(:job_execution_outputs).map(&:job_execution_outputs).flatten.count
@job.executions.includes(:job_execution_outputs).map(&:job_execution_outputs).flatten
@job.executions.includes(:job_execution_outputs).map(&:job_execution_outputs)
@job.executions.includes(:job_execution_outputs)
@job.executions.join(:job_execution_outputs)
@job.executions
@job
